#!/bin/bash

# -------------------------------------
# we output messages to stdout and also stderr to simplify debugging since logs are usually in 
# separate files and we want to see where errors are happening in the script
function debug_output() {
    {
        echo ""
        echo "-------------------------------------" 
        echo "-- $1"
        echo "-------------------------------------"
    } | tee >(cat >&2)
}

# =====================================
debug_output "post install hook"

MOUNT_PATH={{ env.mount }}
CONFIG_PATH={{ env.config }}
HOME=$(pwd)
echo running in   : $MOUNT_PATH
echo HOME is      : $HOME
echo config is in : $CONFIG_PATH

# =====================================
debug_output "environment variables"
printenv

# =====================================
debug_output "create post file {{ env.mount }}/post "
echo "$(date)" > "$MOUNT_PATH/post"

# =====================================
debug_output "set vars we need frequently "
SPACK_CMD="spack -C $CONFIG_PATH"

# =====================================
debug_output "list all spack packages "
$SPACK_CMD find -flv

# =====================================
debug_output "source spack environment setup "
SPACK_ROOT=$( $SPACK_CMD location -r )
source $SPACK_ROOT/share/spack/setup-env.sh

# =====================================
debug_output "convert stackinator environment into a package "
python3 $HOME/store/meta/recipe/scripts/env-to-package.py $HOME/store/meta/recipe/environments.yaml 

templocation=$( $SPACK_CMD location -p temppackage )
echo "temppackge location is reported as " $templocation
# make a copy of the package.py file for possible user consumption
mkdir $MOUNT_PATH/temppackage
cp $templocation/package.py $MOUNT_PATH/temppackage/package.py

# =====================================
debug_output "create build-env "
BUILD_ENV=$MOUNT_PATH/buildenv.rc
SPEC="temppackage %gcc@12.3"
ENV_NAME=gcc-cuda
$SPACK_CMD -e $HOME/environments/$ENV_NAME/ env activate --sh
$SPACK_CMD -e $HOME/environments/$ENV_NAME/ add $SPEC
$SPACK_CMD -e $HOME/environments/$ENV_NAME/ concretize
$SPACK_CMD -e $HOME/environments/$ENV_NAME/ build-env --dump $BUILD_ENV "$SPEC"

# =====================================
debug_output "set permissions  "
chmod -R a+r $BUILD_ENV

# =====================================
debug_output "Done"
